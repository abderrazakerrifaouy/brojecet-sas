if(M==1){
    rocherch(abdo ,nmb);
    }else if(M==2){
        printf(" Sort by size ? press 1 ; \n sort by name press 2 \n what is your choice ? ");
        scanf("%d",&N);
        if(N==1){
            printf(" to sort products from cheapest to most expensive; ");
            riche = 0 ;
         }
       }


       abdo[1].W 
       abdo[2].W


        int erey[x-1] ;
    for (int  i = 0; i < x-1 ; i++)
    { 
        myerey2[i]==myerey2[i];
    }
    return erey[x-1] ;



    CHALENGE 



    Challenge 1:

Ecrire un programme C qui définit et appelle une fonction bonjour qui affiche le message Youcode.


Challenge 2 :

Ecrire un programme C qui définit et utilise une fonction de prototype int Somme(int,int) qui prend en paramètres deux entiers et renvoie leur somme.

Challenge 3 :

Ecrire un programme qui calcul le PGDC (plus grand diviseur commun) de deux nombre entier a et b non nuls (a > b) en utilisant une fonction récursive.

Exemple : PGCD(5, 2) = 1 ; PGCD(10, 5) = 5 ; PGCD(12, 8) = 4
Challenge 4 :


Ecrire un programme C qui détermine le max de quatre entiers à l’aide d’une fonction Max_4, et qui doit utiliser une autre fonction Max_2 qui trouve le max de deux entiers.

Challenge 5 :

Ecrire un programme C qui définit et utilise une fonction Permuter qui permute les valeurs de deux variables réelles.

Challenge 6:

Écrire une procédure qui permet de trouver la résolution d’une équation bicarrée (ax4 + bx2 + c = 0)

Challenge 7:

Écrire une fonction booléenne qui permet de tester si un entier donné est premier ou non.

Challenge 8 :

Écrire une fonction qui teste si un nombre est parfait ou non. Un nombre parfait est un nombre naturel non nul qui est égal à la somme de ses diviseurs stricts (par exemple : le premier nombre parfait est 6, car 1, 2, et 3 sont les diviseurs stricts de 6 et 1 + 2 + 3 = 6)

